//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSMobileApp.DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class WagonStationMobileAppEntities2 : DbContext
    {
        public WagonStationMobileAppEntities2()
            : base("name=WagonStationMobileAppEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<DealerProfile> DealerProfiles { get; set; }
        public DbSet<DealerRating> DealerRatings { get; set; }
        public DbSet<OfferDetail> OfferDetails { get; set; }
        public DbSet<ShopPicture> ShopPictures { get; set; }
        public DbSet<ServiceAttachment> ServiceAttachments { get; set; }
        public DbSet<ServiceDescription> ServiceDescriptions { get; set; }
        public DbSet<ServiceDescriptionType> ServiceDescriptionTypes { get; set; }
        public DbSet<ServiceRequest> ServiceRequests { get; set; }
        public DbSet<ServiceStatu> ServiceStatus { get; set; }
        public DbSet<CarDetail> CarDetails { get; set; }
        public DbSet<CarPicture> CarPictures { get; set; }
        public DbSet<ProfilePicture> ProfilePictures { get; set; }
        public DbSet<UserProfile> UserProfiles { get; set; }
        public DbSet<Attachment> Attachments { get; set; }
        public DbSet<BusinessNatureType> BusinessNatureTypes { get; set; }
        public DbSet<BusinessType> BusinessTypes { get; set; }
        public DbSet<DealerPicture> DealerPictures { get; set; }
        public DbSet<ServiceStatusType> ServiceStatusTypes { get; set; }
        public DbSet<UserType> UserTypes { get; set; }
        public DbSet<vw_GetDealerDetails> vw_GetDealerDetails { get; set; }
        public DbSet<vw_GetDealerRatings> vw_GetDealerRatings { get; set; }
        public DbSet<vw_GetOfferDetails> vw_GetOfferDetails { get; set; }
        public DbSet<vw_GetServiceDetails> vw_GetServiceDetails { get; set; }
        public DbSet<vw_GetCarDetails> vw_GetCarDetails { get; set; }
        public DbSet<vw_GetUserProfileDetails> vw_GetUserProfileDetails { get; set; }
    
        [EdmFunction("WagonStationMobileAppEntities2", "udf_DealerDetails")]
        public virtual IQueryable<udf_DealerDetails_Result> udf_DealerDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_DealerDetails_Result>("[WagonStationMobileAppEntities2].[udf_DealerDetails]()");
        }
    
        [EdmFunction("WagonStationMobileAppEntities2", "udf_DealerDetailsByLatitudeLongitude")]
        public virtual IQueryable<udf_DealerDetailsByLatitudeLongitude_Result> udf_DealerDetailsByLatitudeLongitude(Nullable<decimal> currentLatitude, Nullable<decimal> currentLongitude, Nullable<System.DateTime> currentDate)
        {
            var currentLatitudeParameter = currentLatitude.HasValue ?
                new ObjectParameter("CurrentLatitude", currentLatitude) :
                new ObjectParameter("CurrentLatitude", typeof(decimal));
    
            var currentLongitudeParameter = currentLongitude.HasValue ?
                new ObjectParameter("CurrentLongitude", currentLongitude) :
                new ObjectParameter("CurrentLongitude", typeof(decimal));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_DealerDetailsByLatitudeLongitude_Result>("[WagonStationMobileAppEntities2].[udf_DealerDetailsByLatitudeLongitude](@CurrentLatitude, @CurrentLongitude, @CurrentDate)", currentLatitudeParameter, currentLongitudeParameter, currentDateParameter);
        }
    
        [EdmFunction("WagonStationMobileAppEntities2", "udf_DealerDetailsByUserProfileId")]
        public virtual IQueryable<udf_DealerDetailsByUserProfileId_Result> udf_DealerDetailsByUserProfileId(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_DealerDetailsByUserProfileId_Result>("[WagonStationMobileAppEntities2].[udf_DealerDetailsByUserProfileId](@UserProfileId)", userProfileIdParameter);
        }
    
        [EdmFunction("WagonStationMobileAppEntities2", "udf_UserDetails")]
        public virtual IQueryable<udf_UserDetails_Result> udf_UserDetails(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_UserDetails_Result>("[WagonStationMobileAppEntities2].[udf_UserDetails](@UserProfileId)", userProfileIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<usp_CreateDealerRatings_Result> usp_CreateDealerRatings(Nullable<long> dealerProfileId, Nullable<int> rating, Nullable<long> userProfileId, string ratingDescription)
        {
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var ratingDescriptionParameter = ratingDescription != null ?
                new ObjectParameter("RatingDescription", ratingDescription) :
                new ObjectParameter("RatingDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CreateDealerRatings_Result>("usp_CreateDealerRatings", dealerProfileIdParameter, ratingParameter, userProfileIdParameter, ratingDescriptionParameter);
        }
    
        public virtual ObjectResult<usp_DeleteDealerRatings_Result> usp_DeleteDealerRatings(Nullable<long> dealerRatingsId, Nullable<long> dealerProfileId)
        {
            var dealerRatingsIdParameter = dealerRatingsId.HasValue ?
                new ObjectParameter("DealerRatingsId", dealerRatingsId) :
                new ObjectParameter("DealerRatingsId", typeof(long));
    
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeleteDealerRatings_Result>("usp_DeleteDealerRatings", dealerRatingsIdParameter, dealerProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_DeleteOfferDetails_Result> usp_DeleteOfferDetails(Nullable<long> offerDetailsId, Nullable<long> userProfileId)
        {
            var offerDetailsIdParameter = offerDetailsId.HasValue ?
                new ObjectParameter("OfferDetailsId", offerDetailsId) :
                new ObjectParameter("OfferDetailsId", typeof(long));
    
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeleteOfferDetails_Result>("usp_DeleteOfferDetails", offerDetailsIdParameter, userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetDealerDetailsByDistance_Result> usp_GetDealerDetailsByDistance(Nullable<decimal> currentLatitude, Nullable<decimal> currentLongitude, Nullable<int> distance, Nullable<System.DateTime> currentDate)
        {
            var currentLatitudeParameter = currentLatitude.HasValue ?
                new ObjectParameter("CurrentLatitude", currentLatitude) :
                new ObjectParameter("CurrentLatitude", typeof(decimal));
    
            var currentLongitudeParameter = currentLongitude.HasValue ?
                new ObjectParameter("CurrentLongitude", currentLongitude) :
                new ObjectParameter("CurrentLongitude", typeof(decimal));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(int));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDealerDetailsByDistance_Result>("usp_GetDealerDetailsByDistance", currentLatitudeParameter, currentLongitudeParameter, distanceParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_GetDealerProfileById_Result> usp_GetDealerProfileById(Nullable<long> dealerProfileId, Nullable<System.DateTime> currentDate)
        {
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDealerProfileById_Result>("usp_GetDealerProfileById", dealerProfileIdParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_GetDealerProfileByUserProfileId_Result> usp_GetDealerProfileByUserProfileId(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDealerProfileByUserProfileId_Result>("usp_GetDealerProfileByUserProfileId", userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetDealerRatingByDealerProfileId_Result> usp_GetDealerRatingByDealerProfileId(Nullable<long> dealerProfileId)
        {
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDealerRatingByDealerProfileId_Result>("usp_GetDealerRatingByDealerProfileId", dealerProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetDealerRatingByUserProfileId_Result> usp_GetDealerRatingByUserProfileId(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDealerRatingByUserProfileId_Result>("usp_GetDealerRatingByUserProfileId", userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferDetailsByDealerProfileId_Result> usp_GetOfferDetailsByDealerProfileId(Nullable<long> dealerProfileId)
        {
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferDetailsByDealerProfileId_Result>("usp_GetOfferDetailsByDealerProfileId", dealerProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferDetailsByDealerProfileIdByCurrentDate_Result> usp_GetOfferDetailsByDealerProfileIdByCurrentDate(Nullable<long> dealerProfileId, Nullable<System.DateTime> currentDate)
        {
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferDetailsByDealerProfileIdByCurrentDate_Result>("usp_GetOfferDetailsByDealerProfileIdByCurrentDate", dealerProfileIdParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferDetailsById_Result> usp_GetOfferDetailsById(Nullable<long> offerDetailsId)
        {
            var offerDetailsIdParameter = offerDetailsId.HasValue ?
                new ObjectParameter("OfferDetailsId", offerDetailsId) :
                new ObjectParameter("OfferDetailsId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferDetailsById_Result>("usp_GetOfferDetailsById", offerDetailsIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferDetailsByUserProfileId_Result> usp_GetOfferDetailsByUserProfileId(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferDetailsByUserProfileId_Result>("usp_GetOfferDetailsByUserProfileId", userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferDetailsByUserProfileIdByCurrentDate_Result> usp_GetOfferDetailsByUserProfileIdByCurrentDate(Nullable<long> userProfileId, Nullable<System.DateTime> currentDate)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferDetailsByUserProfileIdByCurrentDate_Result>("usp_GetOfferDetailsByUserProfileIdByCurrentDate", userProfileIdParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_ManageDealerProfile_Result> usp_ManageDealerProfile(Nullable<long> dealerProfileId, Nullable<long> userProfileId, string userName, string userEmail, string shopName, string shopAddress, string pinCode, Nullable<decimal> latitude, Nullable<decimal> longitude, Nullable<int> businessTypeId, string googleApiKey, Nullable<int> businessNatureTypeId)
        {
            var dealerProfileIdParameter = dealerProfileId.HasValue ?
                new ObjectParameter("DealerProfileId", dealerProfileId) :
                new ObjectParameter("DealerProfileId", typeof(long));
    
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var shopNameParameter = shopName != null ?
                new ObjectParameter("ShopName", shopName) :
                new ObjectParameter("ShopName", typeof(string));
    
            var shopAddressParameter = shopAddress != null ?
                new ObjectParameter("ShopAddress", shopAddress) :
                new ObjectParameter("ShopAddress", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(decimal));
    
            var businessTypeIdParameter = businessTypeId.HasValue ?
                new ObjectParameter("BusinessTypeId", businessTypeId) :
                new ObjectParameter("BusinessTypeId", typeof(int));
    
            var googleApiKeyParameter = googleApiKey != null ?
                new ObjectParameter("GoogleApiKey", googleApiKey) :
                new ObjectParameter("GoogleApiKey", typeof(string));
    
            var businessNatureTypeIdParameter = businessNatureTypeId.HasValue ?
                new ObjectParameter("BusinessNatureTypeId", businessNatureTypeId) :
                new ObjectParameter("BusinessNatureTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManageDealerProfile_Result>("usp_ManageDealerProfile", dealerProfileIdParameter, userProfileIdParameter, userNameParameter, userEmailParameter, shopNameParameter, shopAddressParameter, pinCodeParameter, latitudeParameter, longitudeParameter, businessTypeIdParameter, googleApiKeyParameter, businessNatureTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_ManageOfferDetails_Result> usp_ManageOfferDetails(Nullable<long> offerDetailsId, Nullable<long> userProfileId, Nullable<System.DateTime> offerStartDate, Nullable<System.DateTime> offerEndDate, string offerDescription)
        {
            var offerDetailsIdParameter = offerDetailsId.HasValue ?
                new ObjectParameter("OfferDetailsId", offerDetailsId) :
                new ObjectParameter("OfferDetailsId", typeof(long));
    
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var offerStartDateParameter = offerStartDate.HasValue ?
                new ObjectParameter("OfferStartDate", offerStartDate) :
                new ObjectParameter("OfferStartDate", typeof(System.DateTime));
    
            var offerEndDateParameter = offerEndDate.HasValue ?
                new ObjectParameter("OfferEndDate", offerEndDate) :
                new ObjectParameter("OfferEndDate", typeof(System.DateTime));
    
            var offerDescriptionParameter = offerDescription != null ?
                new ObjectParameter("OfferDescription", offerDescription) :
                new ObjectParameter("OfferDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManageOfferDetails_Result>("usp_ManageOfferDetails", offerDetailsIdParameter, userProfileIdParameter, offerStartDateParameter, offerEndDateParameter, offerDescriptionParameter);
        }
    
        public virtual ObjectResult<usp_ManageShopPicture_Result> usp_ManageShopPicture(Nullable<long> attachmentId, Nullable<long> userProfileId, string fileSource)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var fileSourceParameter = fileSource != null ?
                new ObjectParameter("FileSource", fileSource) :
                new ObjectParameter("FileSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManageShopPicture_Result>("usp_ManageShopPicture", attachmentIdParameter, userProfileIdParameter, fileSourceParameter);
        }
    
        public virtual ObjectResult<usp_SortDealerDetailsByDistance_Result> usp_SortDealerDetailsByDistance(Nullable<decimal> currentLatitude, Nullable<decimal> currentLongitude, Nullable<System.DateTime> currentDate)
        {
            var currentLatitudeParameter = currentLatitude.HasValue ?
                new ObjectParameter("CurrentLatitude", currentLatitude) :
                new ObjectParameter("CurrentLatitude", typeof(decimal));
    
            var currentLongitudeParameter = currentLongitude.HasValue ?
                new ObjectParameter("CurrentLongitude", currentLongitude) :
                new ObjectParameter("CurrentLongitude", typeof(decimal));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SortDealerDetailsByDistance_Result>("usp_SortDealerDetailsByDistance", currentLatitudeParameter, currentLongitudeParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_SortDealerDetailsByRatings_Result> usp_SortDealerDetailsByRatings(Nullable<System.DateTime> currentDate)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SortDealerDetailsByRatings_Result>("usp_SortDealerDetailsByRatings", currentDateParameter);
        }
    
        public virtual ObjectResult<usp_GetServiceRequestByServiceRequestId_Result> usp_GetServiceRequestByServiceRequestId(Nullable<long> serviceRequestId)
        {
            var serviceRequestIdParameter = serviceRequestId.HasValue ?
                new ObjectParameter("ServiceRequestId", serviceRequestId) :
                new ObjectParameter("ServiceRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetServiceRequestByServiceRequestId_Result>("usp_GetServiceRequestByServiceRequestId", serviceRequestIdParameter);
        }
    
        public virtual ObjectResult<usp_GetUserCurrentServiceDetails_Result> usp_GetUserCurrentServiceDetails(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserCurrentServiceDetails_Result>("usp_GetUserCurrentServiceDetails", userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_GetUserServiceHistory_Result> usp_GetUserServiceHistory(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserServiceHistory_Result>("usp_GetUserServiceHistory", userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_ChangePassword_Result> usp_ChangePassword(Nullable<long> userProfileId, string oldPassword, string newPassword)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ChangePassword_Result>("usp_ChangePassword", userProfileIdParameter, oldPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<usp_DeleteCardetailsbyId_Result> usp_DeleteCardetailsbyId(Nullable<long> cardetailsid, Nullable<long> userprofileid)
        {
            var cardetailsidParameter = cardetailsid.HasValue ?
                new ObjectParameter("cardetailsid", cardetailsid) :
                new ObjectParameter("cardetailsid", typeof(long));
    
            var userprofileidParameter = userprofileid.HasValue ?
                new ObjectParameter("userprofileid", userprofileid) :
                new ObjectParameter("userprofileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeleteCardetailsbyId_Result>("usp_DeleteCardetailsbyId", cardetailsidParameter, userprofileidParameter);
        }
    
        public virtual int usp_DeleteProfilePicture(Nullable<long> attachmentId)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteProfilePicture", attachmentIdParameter);
        }
    
        public virtual int usp_DeleteShopPicture(Nullable<long> attachmentId)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteShopPicture", attachmentIdParameter);
        }
    
        public virtual ObjectResult<usp_ForgotPassword_Result> usp_ForgotPassword(string userQualifier)
        {
            var userQualifierParameter = userQualifier != null ?
                new ObjectParameter("UserQualifier", userQualifier) :
                new ObjectParameter("UserQualifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForgotPassword_Result>("usp_ForgotPassword", userQualifierParameter);
        }
    
        public virtual ObjectResult<usp_GetCarDetailsbyId_Result> usp_GetCarDetailsbyId(Nullable<long> cardetailsid)
        {
            var cardetailsidParameter = cardetailsid.HasValue ?
                new ObjectParameter("cardetailsid", cardetailsid) :
                new ObjectParameter("cardetailsid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCarDetailsbyId_Result>("usp_GetCarDetailsbyId", cardetailsidParameter);
        }
    
        public virtual ObjectResult<usp_GetCarDetailsbyUserprofileId_Result> usp_GetCarDetailsbyUserprofileId(Nullable<long> userprofileid)
        {
            var userprofileidParameter = userprofileid.HasValue ?
                new ObjectParameter("userprofileid", userprofileid) :
                new ObjectParameter("userprofileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCarDetailsbyUserprofileId_Result>("usp_GetCarDetailsbyUserprofileId", userprofileidParameter);
        }
    
        public virtual ObjectResult<usp_GetUserProfileById_Result> usp_GetUserProfileById(Nullable<long> userProfileId)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserProfileById_Result>("usp_GetUserProfileById", userProfileIdParameter);
        }
    
        public virtual ObjectResult<usp_ManageCarDetails_Result> usp_ManageCarDetails(Nullable<long> cardetailsid, Nullable<long> userprofileid, string carname, Nullable<int> carmakeyear, string carnumber, Nullable<long> attachmentid, string carModelName)
        {
            var cardetailsidParameter = cardetailsid.HasValue ?
                new ObjectParameter("cardetailsid", cardetailsid) :
                new ObjectParameter("cardetailsid", typeof(long));
    
            var userprofileidParameter = userprofileid.HasValue ?
                new ObjectParameter("userprofileid", userprofileid) :
                new ObjectParameter("userprofileid", typeof(long));
    
            var carnameParameter = carname != null ?
                new ObjectParameter("carname", carname) :
                new ObjectParameter("carname", typeof(string));
    
            var carmakeyearParameter = carmakeyear.HasValue ?
                new ObjectParameter("carmakeyear", carmakeyear) :
                new ObjectParameter("carmakeyear", typeof(int));
    
            var carnumberParameter = carnumber != null ?
                new ObjectParameter("carnumber", carnumber) :
                new ObjectParameter("carnumber", typeof(string));
    
            var attachmentidParameter = attachmentid.HasValue ?
                new ObjectParameter("attachmentid", attachmentid) :
                new ObjectParameter("attachmentid", typeof(long));
    
            var carModelNameParameter = carModelName != null ?
                new ObjectParameter("CarModelName", carModelName) :
                new ObjectParameter("CarModelName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManageCarDetails_Result>("usp_ManageCarDetails", cardetailsidParameter, userprofileidParameter, carnameParameter, carmakeyearParameter, carnumberParameter, attachmentidParameter, carModelNameParameter);
        }
    
        public virtual ObjectResult<usp_ManageProfilePicture_Result> usp_ManageProfilePicture(Nullable<long> attachmentId, Nullable<long> userProfileId, string fileSource)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var fileSourceParameter = fileSource != null ?
                new ObjectParameter("FileSource", fileSource) :
                new ObjectParameter("FileSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManageProfilePicture_Result>("usp_ManageProfilePicture", attachmentIdParameter, userProfileIdParameter, fileSourceParameter);
        }
    
        public virtual ObjectResult<usp_ManageUserProfile_Result> usp_ManageUserProfile(Nullable<long> userProfileId, string userName, string userEmail, Nullable<bool> isPromotionalEmailRequired)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var isPromotionalEmailRequiredParameter = isPromotionalEmailRequired.HasValue ?
                new ObjectParameter("IsPromotionalEmailRequired", isPromotionalEmailRequired) :
                new ObjectParameter("IsPromotionalEmailRequired", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManageUserProfile_Result>("usp_ManageUserProfile", userProfileIdParameter, userNameParameter, userEmailParameter, isPromotionalEmailRequiredParameter);
        }
    
        public virtual ObjectResult<usp_ResendOneTimePassword_Result> usp_ResendOneTimePassword(string userQualifier, string userPassword, string oneTimePassword, Nullable<int> userTypeId)
        {
            var userQualifierParameter = userQualifier != null ?
                new ObjectParameter("UserQualifier", userQualifier) :
                new ObjectParameter("UserQualifier", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var oneTimePasswordParameter = oneTimePassword != null ?
                new ObjectParameter("OneTimePassword", oneTimePassword) :
                new ObjectParameter("OneTimePassword", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ResendOneTimePassword_Result>("usp_ResendOneTimePassword", userQualifierParameter, userPasswordParameter, oneTimePasswordParameter, userTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_UpdateMobileNumber_Result> usp_UpdateMobileNumber(Nullable<long> userProfileId, string userMobileNumber, string oneTimePassword)
        {
            var userProfileIdParameter = userProfileId.HasValue ?
                new ObjectParameter("UserProfileId", userProfileId) :
                new ObjectParameter("UserProfileId", typeof(long));
    
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            var oneTimePasswordParameter = oneTimePassword != null ?
                new ObjectParameter("OneTimePassword", oneTimePassword) :
                new ObjectParameter("OneTimePassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UpdateMobileNumber_Result>("usp_UpdateMobileNumber", userProfileIdParameter, userMobileNumberParameter, oneTimePasswordParameter);
        }
    
        public virtual ObjectResult<usp_UserLandingPageDetails_Result> usp_UserLandingPageDetails(Nullable<decimal> currentLatitude, Nullable<decimal> currentLongitude, Nullable<System.DateTime> currentDate)
        {
            var currentLatitudeParameter = currentLatitude.HasValue ?
                new ObjectParameter("CurrentLatitude", currentLatitude) :
                new ObjectParameter("CurrentLatitude", typeof(decimal));
    
            var currentLongitudeParameter = currentLongitude.HasValue ?
                new ObjectParameter("CurrentLongitude", currentLongitude) :
                new ObjectParameter("CurrentLongitude", typeof(decimal));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserLandingPageDetails_Result>("usp_UserLandingPageDetails", currentLatitudeParameter, currentLongitudeParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_UserLandingPageDetailsByBusinessType_Result> usp_UserLandingPageDetailsByBusinessType(Nullable<decimal> currentLatitude, Nullable<decimal> currentLongitude, Nullable<System.DateTime> currentDate, Nullable<int> businessTypeId)
        {
            var currentLatitudeParameter = currentLatitude.HasValue ?
                new ObjectParameter("CurrentLatitude", currentLatitude) :
                new ObjectParameter("CurrentLatitude", typeof(decimal));
    
            var currentLongitudeParameter = currentLongitude.HasValue ?
                new ObjectParameter("CurrentLongitude", currentLongitude) :
                new ObjectParameter("CurrentLongitude", typeof(decimal));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            var businessTypeIdParameter = businessTypeId.HasValue ?
                new ObjectParameter("BusinessTypeId", businessTypeId) :
                new ObjectParameter("BusinessTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserLandingPageDetailsByBusinessType_Result>("usp_UserLandingPageDetailsByBusinessType", currentLatitudeParameter, currentLongitudeParameter, currentDateParameter, businessTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_UserLogin_Result> usp_UserLogin(string userQualifier, string userPassword, Nullable<int> userTypeId)
        {
            var userQualifierParameter = userQualifier != null ?
                new ObjectParameter("UserQualifier", userQualifier) :
                new ObjectParameter("UserQualifier", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserLogin_Result>("usp_UserLogin", userQualifierParameter, userPasswordParameter, userTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_ValidateOneTimePassword_Result> usp_ValidateOneTimePassword(string userQualifier, string userPassword, string oneTimePassword, Nullable<int> userTypeId)
        {
            var userQualifierParameter = userQualifier != null ?
                new ObjectParameter("UserQualifier", userQualifier) :
                new ObjectParameter("UserQualifier", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var oneTimePasswordParameter = oneTimePassword != null ?
                new ObjectParameter("OneTimePassword", oneTimePassword) :
                new ObjectParameter("OneTimePassword", typeof(string));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ValidateOneTimePassword_Result>("usp_ValidateOneTimePassword", userQualifierParameter, userPasswordParameter, oneTimePasswordParameter, userTypeIdParameter);
        }
    
        public virtual int usp_DeleteAttachmentById(Nullable<long> attachmentId)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteAttachmentById", attachmentIdParameter);
        }
    
        public virtual ObjectResult<usp_GetAllBusinessNatureTypes_Result> usp_GetAllBusinessNatureTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllBusinessNatureTypes_Result>("usp_GetAllBusinessNatureTypes");
        }
    
        public virtual ObjectResult<usp_GetAllBusinessTypes_Result> usp_GetAllBusinessTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllBusinessTypes_Result>("usp_GetAllBusinessTypes");
        }
    
        public virtual ObjectResult<usp_GetAttachmentById_Result> usp_GetAttachmentById(Nullable<long> attachmentId)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAttachmentById_Result>("usp_GetAttachmentById", attachmentIdParameter);
        }
    
        public virtual ObjectResult<usp_ManagePicture_Result> usp_ManagePicture(Nullable<long> attachmentId, string fileSource)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(long));
    
            var fileSourceParameter = fileSource != null ?
                new ObjectParameter("FileSource", fileSource) :
                new ObjectParameter("FileSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManagePicture_Result>("usp_ManagePicture", attachmentIdParameter, fileSourceParameter);
        }
    }
}
